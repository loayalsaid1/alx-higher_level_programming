The ``100-matrix_mul`` module
=============================

Using ``matrix_mul``
--------------------

open module
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Documentation:
    >>> len(__import__('100-matrix_mul').__doc__) > 1
    True
    >>> len(__import__('100-matrix_mul').matrix_mul.__doc__) > 1
    True

Checking for no args:
	 >>> matrix_mul()
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

Checking for one too few args:
	 >>> matrix_mul([[1, 2], [3, 4]])
	 Traceback (most recent call last):
	 ...
	 TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

Check for normal case
    >>> matrix_mul([[3, 2, 1, 5], [9, 1, 3, 0]], [[2, 9, 0], [1, 3, 5], [2, 4, 7], [8, 1, 5]])
    [[50, 42, 42], [25, 96, 26]]

Check m_a or m_b not lists?
    >>> matrix_mul("Matrix", [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list

    >>> matrix_mul([[1, 2], [3, 4]], "Matix")
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list


Both are lists of lists?
    >>> matrix_mul([[1, 2], 3], [[1, 2, 3], [1, 2, 3]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists


    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], 4])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists



Both are not emplty?

    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> matrix_mul([[]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

Correct data types?
    >>> matrix_mul([[1, "2"], [3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], ["3", 4]])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats


Both have same size rows?
    >>> matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size


Wrong number of rows and columns?
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6], [7, 8, 9]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

    >>> matrix_mul([[1, 2, 3], [4, 5, 6], [7, 8, 9]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied
